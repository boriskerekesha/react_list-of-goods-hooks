{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","prev","current","localeCompare","LENGTH","length","NONE","reverse","App","useState","setSortType","setIsReversed","isResetButtonVisible","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAmBD,EAAKE,cAAcD,MACxD,MACF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAMC,GAAP,OAAmBD,EAAKI,OAASH,EAAQG,UAC3D,MACF,KAAKb,EAASc,KACZR,EAAY,YAAOH,GAWvB,OAJIE,GACFC,EAAaS,UAGRT,G,SApCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAMgB,EAAgB,WAC3B,MAAgCC,mBAASjB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBc,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBc,EAAnB,KACMC,EAAwBhB,IAAaJ,EAASc,MAAST,EAE7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAML,EAAYlB,EAASO,UACpCc,UAAWG,IACT,iBACA,CAAE,WAAYpB,IAAaJ,EAASO,UALxC,iCAWA,wBACEe,KAAK,SACLC,QAAS,kBAAML,EAAYlB,EAASY,SACpCS,UAAWG,IACT,oBACA,CAAE,WAAYpB,IAAaJ,EAASY,SALxC,4BAWA,wBACEU,KAAK,SACLC,QAAS,kBAAMJ,GAAed,IAC9BgB,UAAWG,IACT,oBACA,CAAE,YAAanB,IALnB,qBAWEe,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPL,EAAYlB,EAASc,MACrBK,GAAc,IALlB,sBAaJ,6BACE,6BACGjB,EACCD,EACA,CAAEG,WAAUC,eACZoB,KAAI,SAACC,GAAD,OACJ,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,cCpHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4bf4ab5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((prev, current) => prev.localeCompare(current));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((prev, current) => prev.length - current.length);\n      break;\n    case SortType.NONE:\n      visibleGoods = [...goods];\n      break;\n    default:\n\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const isResetButtonVisible = (sortType !== SortType.NONE) || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.ALPABET)}\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.LENGTH)}\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReversed(!isReversed)}\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        { isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            { sortType, isReversed },\n          ).map((good) => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}